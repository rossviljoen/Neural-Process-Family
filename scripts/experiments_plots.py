#!/usr/bin/env python3

# %%
import numpy as np
import matplotlib.pyplot as plt
import matplotlib

# %%
matplotlib.rcParams['figure.figsize'] = (5, 3)
title_fontsize=18
label_fontsize=15

# %%
base_kernels = ['RBF_Kernel', 'Matern_Kernel',
    'Noisy_Matern_Kernel',
    'Variable_Matern_Kernel',
    'All_Kernels']
pp = {
    'RBF_Kernel': 'RBF',
    'Matern_Kernel': 'Matern',
    'Noisy_Matern_Kernel': 'Noisy Matern',
    'Variable_Matern_Kernel': 'Variable Matern',
    'All_Kernels': 'All Kernels',
    'Misspec_RBF_Kernel': 'Misspec. RBF',
    'mnist': 'MNIST',
}
pp_short = {
    'RBF_Kernel': 'rbf',
    'Matern_Kernel': 'mat',
    'Noisy_Matern_Kernel': 'nmat',
    'Variable_Matern_Kernel': 'vmat',
    'All_Kernels': 'all',
    'Misspec_RBF_Kernel': 'mspec',
    'mnist': 'mnist',
}

pp_loss = dict(CE = "$\overline{\mathcal{P}}[q]$",
               NLL = "NLL",
               CALIB ="calib-err")

# %%
# GPs Betas Data
gps_betas_nll_data = {'RBF_Kernel': {'NPVI': [-21.04181633390188, -36.77253638371229, 72.37565005245209], 'NPML': [70.65356336497068]*3, 'PAC2T': [146.3876926956177, 147.0738959220886, 181.3479278488159], 'PACm': [-8.744917998611927, -9.976966104650497, 31.084213979160786]}, 'Matern_Kernel': {'NPVI': [21.53884832444191, 17.812335953807832, 75.0900847290039], 'NPML': [94.20686985435486]*3, 'PAC2T': [146.96001223373412, 146.96009314727783, 181.44147769622802], 'PACm': [31.039297086453438, 32.93870963016749, 64.14927266409397]}, 'Noisy_Matern_Kernel': {'NPVI': [55.132263503456116, 55.03800033359528, 94.21777223625183], 'NPML': [110.57767303504944]*3, 'PAC2T': [151.8856452934265, 152.4452480529785, 187.54646436920166], 'PACm': [65.57096973304749, 64.1927230134964, 92.41590649337769]}, 'Variable_Matern_Kernel': {'NPVI': [60.216506479763986, 59.06599454066753, 103.71857945480346], 'NPML': [114.39107093429566]*3, 'PAC2T': [146.92930088348388, 146.5078002128601, 181.23370457229615], 'PACm': [71.37772095868587, 68.83264031091929, 95.72333667912483]}, 'All_Kernels': {'NPVI': [2.2168723406275115, 2.39398535695076, 59.95444331623713], 'NPML': [77.84089869455894]*3, 'PAC2T': [148.59799205067952, 148.5984462384542, 183.5136235478719], 'PACm': [3.1257449585994084, 1.5633684342304865, 34.27537653794289]} }
gps_betas_ce_data = {'RBF_Kernel': {'NPVI': [-18.644064300346376, -33.47499733388424, 73.23722050390244], 'NPML': [80.66626488797665]*3, 'PAC2T': [147.13104174804687, 147.0751525215149, 181.3479278488159], 'PACm': [-9.335228477609158, -11.935594598424435, 22.251751068627833]}, 'Matern_Kernel': {'NPVI': [22.084927072501184, 18.70484858312607, 73.9066497177124], 'NPML': [101.79280445423126]*3, 'PAC2T': [146.96102679367064, 146.96110795059204, 181.44147769622802], 'PACm': [28.248567577648164, 29.211785804235934, 50.42664498319626]}, 'Noisy_Matern_Kernel': {'NPVI': [55.15881103801728, 54.97629250965118, 92.92010981025696], 'NPML': [116.76909218215943]*3, 'PAC2T': [152.5021347579956, 152.4461814315796, 187.54646436920166], 'PACm': [63.33370360069275, 60.61810795707703, 79.26743692550659]}, 'Variable_Matern_Kernel': {'NPVI': [60.726417099559306, 59.72964678429365, 102.93101315631867], 'NPML': [121.89077494335174]*3, 'PAC2T': [146.9294917388916, 146.97506175079346, 181.23370457229615], 'PACm': [71.15320532233716, 67.48752289215327, 85.6266214771986]}, 'All_Kernels': {'NPVI': [3.3163161179264384, 4.4652066544413564, 58.51107053629557], 'NPML': [87.7446721206506]*3, 'PAC2T': [148.59847075983683, 148.59860109939575, 183.5136235478719], 'PACm': [4.136510837944349, 1.7707790862798691, 26.92570762710174]}}
gps_betas_calib_data = {'RBF_Kernel': {'NPVI': [47.68878201198578, 48.92808766288757, 49.938671662139896], 'NPML': [49.189157457256314]*3, 'PAC2T': [48.826963512039185, 48.63475852365494, 48.3479278488159], 'PACm': [49.217232731246945, 48.629523148727415, 48.92504567375183]}, 'Matern_Kernel': {'NPVI': [48.599444172096256, 47.919318553352355, 49.59994642734527], 'NPML': [48.7482984336853]*3, 'PAC2T': [48.83185146365166, 48.83179595761299, 48.44147769622802], 'PACm': [49.581468246650694, 49.969514809036255, 48.78481421527862]}, 'Noisy_Matern_Kernel': {'NPVI': [48.298253191375736, 48.92136984577179, 49.28465796375275], 'NPML': [48.12320034942627]*3, 'PAC2T': [49.15464897460937, 48.88584345283508, 48.54646436920166], 'PACm': [49.03867928562164, 49.28952934207916, 47.81029955635071]}, 'Variable_Matern_Kernel': {'NPVI': [49.12658377380371, 49.22996930656433, 49.58811189002991], 'NPML': [49.32473350925446]*3, 'PAC2T': [48.799490551948544, 48.719380523300174, 48.3370457229615], 'PACm': [49.638721339416506, 49.810565871429446, 48.30159320068359]}, 'All_Kernels': {'NPVI': [47.937005988438926, 50.274046533711754, 48.48516175473531], 'NPML': [48.94105277964274]*3, 'PAC2T': [48.64090047734579, 48.63992847887675, 48.136235478719], 'PACm': [48.09310785179138, 49.18601169420878, 47.56367439301809]}}

mspec_nll_betas = {'Misspec_RBF_Kernel': {'NPVI': [197.78648065795898, 197.88104625854493, 197.97608688201905, 202.43148629608154, 229.75191365356446], 'NPML': [213.29908381805419] * 5, 'PAC2T': [201.90846584320067, 202.0115287399292, 201.4846620727539, 229.2568601928711, 229.28499600067138], 'PACm': [204.50391406402588, 203.82121158294677, 207.70120399780274, 238.04165100860595, 225.97085669555665]}}
mspec_ce_betas = {'Misspec_RBF_Kernel': {'NPVI': [197.49173455352783, 197.53946709747314, 197.17644146575927, 198.6901969848633, 229.7519266265869], 'NPML': [217.95504507141112] * 5, 'PAC2T': [201.750996534729, 201.80703988952638, 201.21176901550294, 230.7022857498169, 230.81064452972413], 'PACm': [197.9130456665039, 197.49248774108887, 197.31739712524413, 192.7373134689331, 228.68162305908203]}}
mspec_calib_betas = {'Misspec_RBF_Kernel': {'NPVI': [60.82197976951599, 59.85544568748474, 60.20361565284729, 60.70644061775207, 60.26653529930115], 'NPML': [60.30091340141296] * 5, 'PAC2T': [60.722870030212405, 60.97626484375, 61.23849471244812, 60.58955033912659, 60.63901484184265], 'PACm': [60.910924839782716, 61.00953460388184, 60.34887024116516, 60.315895518493654, 61.71419941005707]}}

# %%
def plot_betas(data, loss, kernel, betas=[-6, -2, 0]):
    fig, ax = plt.subplots()
    for k, v in data.items():
        ax.plot(betas, v, label=k)

    ax.set_xlabel("log$_{10}$(1/beta)", fontsize=label_fontsize)
    ax.set_xticks(betas)
    ax.set_title(f"Kernel: {kernel}, Loss: {loss}", fontsize=title_fontsize)
    ax.legend()
    fig.tight_layout()
    return fig

def plot_betas_loss(data, loss, kernels=base_kernels, betas=[-6, -2, 0], save=False):
    for kern in kernels:
        # data[kern].pop('NPML', None)
        fig = plot_betas(data[kern], pp_loss[loss], pp[kern], betas)
        if save:
            fig.savefig(
                "plots/gps_betas_" + pp_short[kern] + "_" + loss.lower() + ".png", dpi=600
            )

# %%
save_gps_betas=True
plot_betas_loss(gps_betas_nll_data, "NLL", save=save_gps_betas)

# %%
plot_betas_loss(gps_betas_ce_data, "CE", save=save_gps_betas)

# %%
plot_betas_loss(gps_betas_calib_data, "CALIB", save=save_gps_betas)

# %%
save_mspec=True
plot_betas_loss(mspec_nll_betas, "NLL", kernels=['Misspec_RBF_Kernel'], betas=[-6, -4, -2, 0, 2], save=save_mspec)
plot_betas_loss(mspec_ce_betas, "CE", kernels=['Misspec_RBF_Kernel'], betas=[-6, -4, -2, 0, 2], save=save_mspec)
plot_betas_loss(mspec_calib_betas, "CALIB", kernels=['Misspec_RBF_Kernel'], betas=[-6, -4, -2, 0, 2], save=save_mspec)

# %%
# GPs samples data
gps_samples_nll_data = {'RBF_Kernel': {'NPVI': [82.30184599933624, 92.44014076461792, 102.74768140487672, 88.2987424999237, 101.4217546825409], 'NPML': [96.99304383487701, 76.24716797795296, 75.65808944005965, 79.61058512104749, 78.8731258310318], 'PAC2T': [133.16904259757996, 179.67660807724, 180.0991091972351, 181.32854377212524, 181.32900122299193], 'PACm': [133.16904259757996, 61.67937464234829, 27.893284186804294, 21.371625393795966, 39.42405117839575]}, 'Matern_Kernel': {'NPVI': [104.47013239173889, 103.08363208847045, 111.84288230361939, 91.86122033538818, 91.18807630348205], 'NPML': [119.90232223472596, 109.27705249214172, 104.98299373092651, 106.2042187221527, 118.41926063117981], 'PAC2T': [109.28592120895385, 179.80691286773683, 180.19019177627564, 181.23387399139403, 181.2343726852417], 'PACm': [109.28592120895385, 97.58602857551574, 82.38951790504456, 74.3746968893528, 97.63844470160008]}, 'Noisy_Matern_Kernel': {'NPVI': [130.21909834442138, 123.48546252670288, 123.38453831253052, 115.78889990768432, 116.12387536697388], 'NPML': [136.85310656051635, 131.91228166122437, 127.556916822052, 130.49695241012574, 130.34453055343627], 'PAC2T': [140.12002751083375, 186.70005911254881, 187.03259640197754, 187.1671387939453, 188.0375942489624], 'PACm': [140.12002751083375, 124.71832858428955, 109.21164319038391, 112.19171087722778, 126.23544074287415]}, 'Variable_Matern_Kernel': {'NPVI': [136.23696753997802, 129.21127053394318, 129.0887494796753, 122.39203926563263, 122.55221642341614], 'NPML': [152.76715395126342, 138.05298620319365, 132.77247217330932, 131.36341491107942, 131.3688693813324], 'PAC2T': [144.5420906639099, 180.26055923461914, 180.52275982284547, 180.60857985076905, 180.67740114746093], 'PACm': [144.5420906639099, 131.56864006500246, 139.0917751647949, 113.4125195477128, 119.66750697965622]}, 'All_Kernels': {'NPVI': [93.01666379381815, 83.58877785752614, 83.03491193854013, 74.28845499426524, 73.39196484387716], 'NPML': [100.21698700306416, 85.45317500430743, 79.77280383455754, 83.37768689203659, 90.89655580142339], 'PAC2T': [68.57694477265676, 183.61397131856282, 183.6146503768921, 183.61467881876627, 183.54017071202597], 'PACm': [68.57694477265676, 57.70433659269015, 44.54449848023653, 41.34198322272698, 41.403111059896155]}}

gps_samples_ce_data = {'RBF_Kernel': {'NPVI': [84.38650558147431, 93.75201179447174, 103.34323240318298, 89.20078224506378, 101.88020990829467], 'NPML': [99.30128595943451, 82.35980649287701, 85.096250192523, 93.19124852306842, 94.69398905556201], 'PAC2T': [136.79151495742798, 181.39385011596679, 181.37641544952393, 181.3302856613159, 181.33029665222168], 'PACm': [136.79151495742798, 67.79649617347717, 30.315347560966014, 15.050619977879524, 4.0811906795740125]}, 'Matern_Kernel': {'NPVI': [103.70685981674194, 102.18557639312745, 110.88835752334595, 90.48340607566834, 89.66323456420898], 'NPML': [121.38345128898621, 112.85149390296937, 110.9157948791504, 115.45937140579224, 132.28364919433594], 'PAC2T': [111.5863502571106, 181.31984387130737, 181.29416788024903, 181.23555724182128, 181.2354656097412], 'PACm': [111.5863502571106, 98.48020663070679, 79.82101921997071, 60.89639588785172, 54.48105662050247]}, 'Noisy_Matern_Kernel': {'NPVI': [129.25616036758422, 122.03761441268921, 122.04550461883545, 114.16889532394408, 114.73307602005005], 'NPML': [137.97233822555543, 134.39685810317994, 132.8200119277954, 138.18316570281982, 139.53980271072388], 'PAC2T': [140.737291015625, 188.12255422363282, 188.1325696380615, 188.0803008239746, 188.0387325454712], 'PACm': [140.737291015625, 124.6748195739746, 104.44113365859985, 97.76336399650573, 89.71176742095948]}, 'Variable_Matern_Kernel': {'NPVI': [136.42555038528442, 128.91000919036864, 128.70452056808472, 122.01398283481598, 122.36536195468902], 'NPML': [153.62399257583618, 142.97671911087036, 139.61644993057251, 140.38220993003844, 141.8595209918976], 'PAC2T': [145.59293295135498, 181.4240947151184, 181.36092956619262, 181.31007346115112, 181.2845387786865], 'PACm': [145.59293295135498, 131.69609791755676, 137.64709666938782, 103.7084735149622, 94.5500267585516]}, 'All_Kernels': {'NPVI': [91.62048615468343, 82.11043946908315, 81.38620003210704, 72.72213176015218, 71.63006911942163], 'NPML': [101.32726813756625, 91.92249915319681, 89.25917117857934, 94.5952105257829, 102.59138856570323], 'PAC2T': [68.2639127711614, 183.6150127126058, 183.61495111541748, 183.61491751149495, 183.61232704671224], 'PACm': [68.2639127711614, 55.7354922668616, 41.99118921542168, 32.921215263974666, 25.972028118340173]}}

gps_samples_calib_data = {'RBF_Kernel': {'NPVI': [59.90804050483704, 60.35530169429779, 60.76295118980408, 59.15569460258484, 59.90303412857055], 'NPML': [60.25908557157516, 60.18692760848999, 59.13540959148407, 61.59989862155914, 60.343388028717044], 'PAC2T': [59.62514017410278, 59.71272892160415, 59.93143694992065, 60.07069547147751, 60.07065396795273], 'PACm': [59.62514017410278, 60.44860195045471, 57.5099063659668, 59.55006172523498, 62.128513707733156]}, 'Matern_Kernel': {'NPVI': [58.670402338027955, 61.11318520355225, 60.7060566898346, 60.2279000377655, 59.98382421646118], 'NPML': [59.48974102115631, 60.1205136341095, 58.662932976531984, 61.143173156929016, 60.232182031822205], 'PAC2T': [60.452474545288084, 59.91560586152077, 60.18284987635612, 60.309604435873034, 60.3099394382], 'PACm': [60.452474545288084, 60.1053044921875, 61.09800409240723, 60.625523748779294, 58.1610324382782]}, 'Noisy_Matern_Kernel': {'NPVI': [59.362431660461425, 60.18490299873352, 59.154317335891726, 59.9952221862793, 59.51709141654968], 'NPML': [59.9412330160141, 62.239256546783444, 59.01787199630737, 60.77668313751221, 59.428248549079896], 'PAC2T': [61.06055463676453, 59.98308778781891, 60.19498526248932, 60.181376293182375, 60.40294883518219], 'PACm': [61.06055463676453, 59.946684925079346, 60.30114579353332, 59.714129710388185, 60.06607470283508]}, 'Variable_Matern_Kernel': {'NPVI': [60.27941598854065, 60.05326629486084, 60.23389964179993, 60.801630321884154, 61.043098693847654], 'NPML': [61.06508419799805, 59.82972921352386, 60.77217427768707, 60.94052573776245, 60.98800565814972], 'PAC2T': [60.84257467842102, 59.840009595680236, 60.18099214448929, 60.19278213005066, 60.24465014476776], 'PACm': [60.84257467842102, 61.068217934417724, 59.659348944473265, 59.64080126457215, 60.86460632514954]}, 'All_Kernels': {'NPVI': [60.00471255620321, 60.69290606447856, 60.07370857327779, 60.413678443400066, 60.32946465759277], 'NPML': [61.69500052216848, 59.50067334699631, 61.133785211817425, 60.01686073557536, 61.05253679561615], 'PAC2T': [61.97575063692729, 60.23864174906413, 60.23889374850591, 60.23966508245468, 60.20521443901062], 'PACm': [61.97575063692729, 60.015152456283566, 59.435462617111206, 60.54747904383341, 59.88715108566284]}} 

# %%
def plot_samples(data, loss, kernel):
    fig, ax = plt.subplots()
    xs = [0, 1, 2, 3, 4]
    for k, v in data.items():
        ax.plot(xs, v, label=k)

    ax.set_xlabel("log$_2$(samples)", fontsize=label_fontsize)
    ax.set_xticks(xs)
    ax.set_title(f"{kernel}, Loss: {loss}", fontsize=title_fontsize)
    ax.legend()
    fig.tight_layout()
    return fig

def plot_nsamples_loss(data, loss, save=False):
    for kern in base_kernels:
        fig = plot_samples(data[kern], pp_loss[loss], pp[kern])
        if save:
            fig.savefig(
                "plots/gps_ns_" + pp_short[kern] + "_" + loss.lower() + ".png", dpi=600
            )

# %% 
gps_ns_save = True
# %%
plot_nsamples_loss(gps_samples_nll_data, "NLL", save=gps_ns_save)

# %%
plot_nsamples_loss(gps_samples_ce_data, "CE", save=gps_ns_save)

# %%
plot_nsamples_loss(gps_samples_calib_data, "CALIB", save=gps_ns_save)

# %%
def plot_nsamples_loss_imgs(data, loss, save=False):
    fig = plot_samples(data['mnist'], pp_loss[loss], pp['mnist'])
    if save:
        fig.savefig(
            "plots/imgs_ns_" + pp_short['mnist'] + "_" + loss.lower() + ".png", dpi=600
        )

# %%
# Images samples data
imgs_samples_nll_data = {'mnist': {'NPVI': [-2374.7388, -2630.3933, -2598.3147, -2672.0737, -2653.5479],  'NPML': [-1917.6993, -2110.9785, -2198.5647, -2281.8811, -2347.4082], 'PAC2T': [-2019.2338, -2452.1863, -2485.217, -2522.2527, -2522.9729], 'PACm': [-2453.5369, -2333.8745, -1706.785, -1524.7074, -1392.3368]}}

imgs_samples_ce_data = {'mnist': {'NPVI': [-2368.4890421691894, -2620.473658607483, -2583.990130178833, -2663.333203729248, -2645.554511114502], 'NPML': [-1898.7237820228577, -2015.2220810295105, -2084.8040677474974, -2166.948590686035, -2306.591733065033], 'PAC2T': [-1996.3402290679933, -2446.8639479766844, -2473.7360735473635, -2510.058929260254, -2510.08779543457], 'PACm': [-2439.052235723877, -2335.059081915283, -2160.0148016967773, -2175.6582075149536, -2475.041590637207]}}

imgs_samples_calib_data = {'mnist': {'NPVI': [-2368.4890421691894, -2620.473658607483, -2583.990130178833, -2663.333203729248, -2645.554511114502], 'NPML': [-1898.7237820228577, -2015.2220810295105, -2084.8040677474974, -2166.948590686035, -2306.591733065033], 'PAC2T': [-1996.3402290679933, -2446.8639479766844, -2473.7360735473635, -2510.058929260254, -2510.08779543457], 'PACm': [-2439.052235723877, -2335.059081915283, -2160.0148016967773, -2175.6582075149536, -2475.041590637207]}}
# %%
save_imgs=True
# %%
plot_nsamples_loss_imgs(imgs_samples_ce_data, "CE", save=save_imgs)

plot_nsamples_loss_imgs(imgs_samples_nll_data, "NLL", save=save_imgs)

plot_nsamples_loss_imgs(imgs_samples_calib_data, "CALIB", save=save_imgs)





# %%

# # %%
# CE = "$\overline{\mathcal{P}}[q]$"
# NLL = "NLL"
# CALIB ="calib-err"
# def plot_samples(data, loss, kernel):
#     fig, ax = plt.subplots()
#     xs = [0, 1, 2, 3, 4]
#     for k, v in data.items():
#         ax.plot(xs, v, label=k)

#     ax.set_xlabel("log$_2$(samples)")
#     ax.set_xticks(xs)
#     ax.set_title(f"Kernel: {kernel}, Loss: {loss}")
#     ax.legend()
#     fig.tight_layout()
#     return fig

# def plot_nsamples_loss(data, loss):
#     for kern in kernels:
#         plot_betas(data[kern], pp_loss[loss], pp[kern]).savefig(
#             "plots/gps_ns_" + pp_short[kern] + "_" + loss.lower() + ".png", dpi=600
#         )

# # %%
# RBF="RBF"
# rbf_ce = dict(
#     NPVI=[103 , 93.8 ,  103 , 89.2 ,  102],
#     NPML=[99.3 , 82.4 , 85.1 , 72.9 , 94.7],
#     # PAC2T=
#     PACm=[ 137 , 67.8 , 30.3 , 15.1 , 4.08]
# )

# rbf_nll = dict(
#     NPVI=[34.7 , 38.2 ,  55.4 ,  55.4 ,  55.4],
#     NPML=[97.0 , 76.2 , 75.7 , 79.6 , 78.9],
#     # PAC2T=
#     PACm=[133 , 61.7 , 27.9 ,  52.9 ,  52.9],
# )

# rbf_ce_fig = plot_samples(rbf_ce, CE, RBF)
# rbf_nll_fig = plot_samples(rbf_nll, NLL, RBF)
# rbf_ce_fig.savefig("plots/ns_rbf_ce.png", dpi=600)
# rbf_nll_fig.savefig("plots/ns_rbf_nll.png", dpi=600)


# # %%
# MAT="Matern"
# mat_ce = dict(
#     NPVI=[129 ,  102 ,  111 , 90.5 , 89.7],
#     NPML=[121 ,  113 ,  111 ,  115 ,  132],
#     # PAC2T=
#     PACm=[112 , 98.5 , 80.0 , 60.8 , 54.5],
# )

# mat_nll=dict(
#     NPVI=[104 ,  103 ,  112 , 91.9 , 91.2],
#     NPML=[119 ,  109 ,  105 ,  106 ,  118],
#     # PAC2T
#     PACm=[109 , 97.6 , 82.4 , 74.4 , 97.6],
# )

# mat_ce_fig = plot_samples(mat_ce, CE, MAT)
# mat_nll_fig = plot_samples(mat_nll, NLL, MAT)
# mat_ce_fig.savefig("plots/ns_mat_ce.png", dpi=600)
# mat_nll_fig.savefig("plots/ns_mat_nll.png", dpi=600)


# # %%
# NMAT = "Noisy Matern"
# nmat_ce = dict(
#     NPVI=[136 , 122 , 122 ,  114 ,  115],
#     NPML=[137 , 112 , 111 ,  115 ,  132],
#     # PAC2T
#     PACm=[141 , 125 , 104 , 97.8 , 89.7],
# )

# nmat_nll = dict(
#     NPVI=[130 , 123 , 123 , 116 , 116],
#     NPML=[137 , 132 , 128 , 130 , 130],
#     # PAC2T
#     PACm=[140 , 125 , 109 , 112 , 126],
# )

# nmat_ce_fig = plot_samples(nmat_ce, CE, NMAT)
# nmat_nll_fig = plot_samples(nmat_nll, NLL, NMAT)
# nmat_ce_fig.savefig("plots/ns_nmat_ce.png", dpi=600)
# nmat_nll_fig.savefig("plots/ns_nmat_nll.png", dpi=600)


# # %%
# VMAT = "Variable Matern"
# vmat_ce = dict(
#     NPVI=[91.6 , 129 , 129 , 122 ,  122],
#     NPML=[ 154 , 143 , 140 , 140 ,  142],
#     # PAC2T
#     PACm=[ 145 , 132 , 137 , 104 , 94.6]
# )

# vmat_nll = dict(
#     NPVI=[ 136 ,  129 ,  129 ,  122 ,  123],
#     NPML=[ 153 ,  138 ,  133 ,  131 ,  131],
#     # PAC2T
#     PACm=[68.6 , 57.7 , 44.5 , 41.3 , 41.4],
# )

# vmat_ce_fig = plot_samples(vmat_ce, CE, VMAT)
# vmat_nll_fig = plot_samples(vmat_nll, NLL, VMAT)
# vmat_ce_fig.savefig("plots/ns_vmat_ce.png", dpi=600)
# vmat_nll_fig.savefig("plots/ns_vmat_nll.png", dpi=600)

# # %%
# ALL = "All Kernels"
# all_ce = dict(
#     NPVI=[99.3 , 82.1 , 81.4 , 72.7 , 71.6],
#     NPML=[ 101 ,   91 , 89.3 , 94.6 ,  103],
#     # PAC2T=
#     PACm=[68.3 , 55.7 , 42.0 , 33.0 , 26.0]
# )

# all_nll = dict(
#     NPVI=[  93 , 83.6 ,   83 ,   74 , 73.4],
#     NPML=[ 100 , 85.5 , 79.8 , 83.4 ,  90.9],
#     # PAC2T
#     PACm=[68.6 , 57.7 , 44.5 , 41.3 ,  41.4],
# )

# all_ce_fig = plot_samples(all_ce, CE, ALL)
# all_nll_fig = plot_samples(all_nll, NLL, ALL)
# all_ce_fig.savefig("plots/ns_all_ce.png", dpi=600)
# all_nll_fig.savefig("plots/ns_all_nll.png", dpi=600)

